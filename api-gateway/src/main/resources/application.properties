spring.application.name=API-GATEWAY
server.port=9191

##### eureka config #####
eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

##actuator
management.endpoint.web.exposure.include=*

##enable and show the logging for route mapping
logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG

##----------- automatic route config -----------##
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#spring.cloud.gateway.discovery.locator.route-id-prefix=


##----------- manual route config -----------##
## employee routing config
#ID
spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE
## lb -> load balancing, it can use the id(same as registered in eureka)
# or the service URL (load balancer will turn off)
spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
##this is the entry point to employee microservice
## the route  http://localhost:9191/api/employees will direct to ->  http://localhost:8081/api/employees
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**


## department routing config
#ID
spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE
## lb -> load balancing, it can use the id(same as registered in eureka)
# or the service URL (load balancer will turn off)
spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
##this is the entry point to departments microservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**

## organization routing config
#ID
spring.cloud.gateway.routes[2].id=ORGANIZATION-SERVICE
## lb -> load balancing, it can use the id(same as registered in eureka)
# or the service URL (load balancer will turn off)
spring.cloud.gateway.routes[2].uri=lb://ORGANIZATION-SERVICE
##this is the entry point to organization microservice
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/organizations/**






spring.zipkin.base-url=http://localhost:9411/

